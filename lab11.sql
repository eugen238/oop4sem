--1
SELECT *
FROM ORDERS
WHERE ORDER_DATE BETWEEN '2008-01-01' AND '2008-04-30';

--2
SELECT *
FROM SALESREPS
WHERE MANAGER IS NULL;

--3
SELECT *
FROM OFFICES
WHERE REGION LIKE 'East%';

--4
SELECT *
FROM PRODUCTS
WHERE PRICE > 100
ORDER BY PRICE DESC;

--5
SELECT NAME, HIRE_DATE
FROM SALESREPS
ORDER BY AGE;

--6
SELECT *
FROM ORDERS
ORDER BY AMOUNT DESC, QTY ASC;

--7
SELECT *
FROM PRODUCTS
ORDER BY PRICE DESC
LIMIT 5;

--8
SELECT *
FROM CUSTOMERS
ORDER BY CREDIT_LIMIT DESC
LIMIT 11;

--9
SELECT *
FROM SALESREPS
ORDER BY HIRE_DATE
LIMIT 3 OFFSET 3;

--10
SELECT *
FROM SALESREPS
WHERE AGE IN (
    SELECT AGE
    FROM SALESREPS
    ORDER BY AGE
    LIMIT 3 OFFSET 3
)
ORDER BY AGE;

--11
SELECT DISTINCT PRODUCT, MFR
FROM ORDERS;

--12
SELECT CUST, COUNT(*) as TOTAL_ORDERS
FROM ORDERS
GROUP BY CUST;

--13
SELECT SALESREPS.NAME, AVG(ORDERS.AMOUNT) AS AVG_ORDER_PRICE
FROM ORDERS
JOIN SALESREPS ON ORDERS.REP = SALESREPS.EMPL_NUM
GROUP BY SALESREPS.NAME;

--14
SELECT s.EMPL_NUM, s.NAME
FROM SALESREPS s
JOIN ORDERS o ON s.EMPL_NUM = o.REP
GROUP BY s.EMPL_NUM
HAVING SUM(o.AMOUNT) > 3500;

--15
SELECT MFR_ID, COUNT(*) AS PRODUCT_COUNT
FROM PRODUCTS
GROUP BY MFR_ID;

--16
SELECT MFR_ID, PRODUCT_ID, DESCRIPTION, PRICE
FROM (
    SELECT MFR_ID, PRODUCT_ID, DESCRIPTION, PRICE, 
           ROW_NUMBER() OVER (PARTITION BY MFR_ID ORDER BY PRICE DESC) AS rn
    FROM PRODUCTS
) t
WHERE rn = 1;

--17
SELECT c.COMPANY, p.DESCRIPTION, p.MFR_ID, p.PRODUCT_ID, o.QTY, o.AMOUNT
FROM CUSTOMERS c
JOIN ORDERS o ON c.CUST_NUM = o.CUST
JOIN PRODUCTS p ON o.MFR = p.MFR_ID AND o.PRODUCT = p.PRODUCT_ID
ORDER BY c.COMPANY, p.DESCRIPTION;

--18
SELECT s.NAME 
FROM SALESREPS s 
WHERE NOT EXISTS (SELECT * FROM ORDERS o WHERE o.REP = s.EMPL_NUM);

--19
SELECT DISTINCT sr1.NAME, sr1.AGE
FROM SALESREPS sr1 JOIN SALESREPS sr2 ON sr1.AGE = sr2.AGE AND sr1.EMPL_NUM <> sr2.EMPL_NUM
ORDER BY sr1.AGE, sr1.NAME;

--20
SELECT DISTINCT p.DESCRIPTION 
FROM ORDERS o, PRODUCTS p, CUSTOMERS c 
WHERE o.PRODUCT = p.PRODUCT_ID 
AND o.MFR = p.MFR_ID 
AND o.CUST = c.CUST_NUM 
AND c.COMPANY = 'First Corp.';


--21
SELECT * 
FROM ORDERS 
WHERE AMOUNT > (SELECT AVG(AMOUNT) FROM ORDERS);

--22
SELECT DISTINCT s1.NAME, s2.NAME
FROM SALESREPS s1, SALESREPS s2, CUSTOMERS c1, CUSTOMERS c2, ORDERS o1, ORDERS o2
WHERE s1.EMPL_NUM < s2.EMPL_NUM
AND s1.EMPL_NUM = o1.REP
AND s2.EMPL_NUM = o2.REP
AND o1.CUST = c1.CUST_NUM
AND o2.CUST = c2.CUST_NUM
AND c1.CUST_NUM = c2.CUST_NUM


--23
SELECT DISTINCT CUSTOMERS.*
FROM CUSTOMERS
INNER JOIN ORDERS ON CUSTOMERS.CUST_NUM = ORDERS.CUST
WHERE ORDER_DATE IN (
  SELECT ORDER_DATE
  FROM ORDERS
  GROUP BY ORDER_DATE
  HAVING COUNT(DISTINCT CUST) > 1
)

--24
SELECT OFFICES.OFFICE, SUM(ORDERS.AMOUNT) as TOTAL_AMOUNT
FROM ORDERS
JOIN SALESREPS ON ORDERS.REP = SALESREPS.EMPL_NUM
JOIN OFFICES ON SALESREPS.REP_OFFICE = OFFICES.OFFICE
GROUP BY OFFICES.OFFICE
ORDER BY TOTAL_AMOUNT DESC;

--25
SELECT *
FROM SALESREPS
WHERE EXISTS (
    SELECT 1
    FROM SALESREPS sub
    WHERE sub.MANAGER = SALESREPS.EMPL_NUM
);

--26
SELECT SALESREPS.*
FROM SALESREPS
LEFT JOIN SALESREPS AS SR ON SALESREPS.EMPL_NUM = SR.MANAGER
WHERE SR.EMPL_NUM IS NULL;

--27
SELECT DISTINCT PRODUCTS.*
FROM PRODUCTS
JOIN ORDERS ON PRODUCTS.MFR_ID = ORDERS.MFR AND PRODUCTS.PRODUCT_ID = ORDERS.PRODUCT
JOIN SALESREPS ON ORDERS.REP = SALESREPS.EMPL_NUM
JOIN OFFICES ON SALESREPS.REP_OFFICE = OFFICES.OFFICE
WHERE OFFICES.REGION = 'Eastern';

--28
SELECT SALESREPS.NAME, SALESREPS.HIRE_DATE, SUM(ORDERS.AMOUNT) AS TOTAL_SALES
FROM SALESREPS
LEFT JOIN ORDERS ON SALESREPS.EMPL_NUM = ORDERS.REP
GROUP BY SALESREPS.NAME, SALESREPS.HIRE_DATE
ORDER BY TOTAL_SALES DESC;

--29
SELECT ORDERS.*, SUM(ORDERS.QTY) AS TOTAL_QTY
FROM ORDERS
JOIN SALESREPS ON ORDERS.REP = SALESREPS.EMPL_NUM
JOIN OFFICES ON SALESREPS.REP_OFFICE = OFFICES.OFFICE
WHERE OFFICES.REGION = 'Eastern'
GROUP BY ORDERS.ORDER_NUM
ORDER BY TOTAL_QTY ASC;

--30
SELECT p.PRODUCT_ID, p.PRICE
FROM PRODUCTS p
WHERE p.PRICE > (SELECT AVG(o.AMOUNT)
                 FROM ORDERS o
                 INNER JOIN CUSTOMERS c ON o.CUST = c.CUST_NUM
                 WHERE c.COMPANY = 'First Corp.');
				 
--31
SELECT p.PRODUCT_ID
FROM PRODUCTS p
WHERE NOT EXISTS (SELECT 1
                  FROM ORDERS o
                  INNER JOIN CUSTOMERS c ON o.CUST = c.CUST_NUM
                  WHERE c.COMPANY = 'First Corp.' AND o.MFR = p.MFR_ID AND o.PRODUCT = p.PRODUCT_ID);

--32
SELECT o.CUST, o.PRODUCT, o.AMOUNT, AVG(p.PRICE) as AVG_PRICE
FROM ORDERS o
INNER JOIN PRODUCTS p ON o.MFR = p.MFR_ID AND o.PRODUCT = p.PRODUCT_ID
GROUP BY o.CUST, o.PRODUCT, o.AMOUNT
HAVING o.AMOUNT < AVG(p.PRICE);



-33.1
SELECT DISTINCT SR.NAME, SR.EMPL_NUM
FROM SALESREPS SR
WHERE EXISTS (
    SELECT *
    FROM ORDERS O1
    WHERE O1.ORDER_DATE LIKE '2008%'
    AND O1.REP = SR.EMPL_NUM
)
AND NOT EXISTS (
    SELECT *
    FROM ORDERS O2
    WHERE O2.ORDER_DATE LIKE '2007%'
    AND O2.REP = SR.EMPL_NUM
)

--33.2
SELECT DISTINCT s.NAME, SR.EMPL_NUM
FROM SALESREPS s
INNER JOIN ORDERS o ON s.EMPL_NUM = o.REP
WHERE o.ORDER_DATE BETWEEN '2008-01-01' AND '2008-12-31'
AND s.NAME NOT IN (
    SELECT DISTINCT s.NAME
    FROM SALESREPS s
    INNER JOIN ORDERS o ON s.EMPL_NUM = o.REP
    WHERE o.ORDER_DATE BETWEEN '2007-01-01' AND '2007-12-31'
);

--34.1
SELECT DISTINCT C.COMPANY, C.CUST_NUM
FROM CUSTOMERS C
WHERE EXISTS (
    SELECT *
    FROM ORDERS O1
    WHERE O1.ORDER_DATE LIKE '2007%'
    AND O1.CUST = C.CUST_NUM
)
AND NOT EXISTS (
    SELECT *
    FROM ORDERS O2
    WHERE O2.ORDER_DATE LIKE '2008%'
    AND O2.CUST = C.CUST_NUM
)

--34.2
SELECT COMPANY, CUST_NUM
FROM CUSTOMERS
WHERE CUST_NUM NOT IN (
    SELECT CUST
    FROM ORDERS
    WHERE ORDER_DATE BETWEEN '2008-01-01' AND '2008-12-31'
)
AND CUST_NUM IN (
    SELECT CUST
    FROM ORDERS
    WHERE ORDER_DATE BETWEEN '2007-01-01' AND '2007-12-31'
)


--35.1
SELECT DISTINCT C.COMPANY, C.CUST_NUM
FROM CUSTOMERS C, ORDERS O1
WHERE O1.ORDER_DATE LIKE '2007%'
AND O1.CUST = C.CUST_NUM
INTERSECT
SELECT DISTINCT C.COMPANY, C.CUST_NUM
FROM CUSTOMERS C, ORDERS O2
WHERE O2.ORDER_DATE LIKE '2008%'
AND O2.CUST = C.CUST_NUM

--35.2
SELECT DISTINCT C.COMPANY, C.CUST_NUM
FROM CUSTOMERS C
WHERE C.CUST_NUM IN (
    SELECT O1.CUST
    FROM ORDERS O1
    WHERE O1.ORDER_DATE LIKE '2007%'
)
AND C.CUST_NUM IN (
    SELECT O2.CUST
    FROM ORDERS O2
    WHERE O2.ORDER_DATE LIKE '2008%'
)